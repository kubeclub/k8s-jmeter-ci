<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="yummy_V2_Prod" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">\testMd5.jar,D:\jmeter\yummy\yummy_V2\prod\testMd5.jar</stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie管理器" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="appKey" elementType="Header">
            <stringProp name="Header.name">appKey</stringProp>
            <stringProp name="Header.value">4B0832A569AB4382BA035833C6CD7FB8</stringProp>
          </elementProp>
          <elementProp name="sign" elementType="Header">
            <stringProp name="Header.name">sign</stringProp>
            <stringProp name="Header.value">${sign}</stringProp>
          </elementProp>
          <elementProp name="timestamp" elementType="Header">
            <stringProp name="Header.name">timestamp</stringProp>
            <stringProp name="Header.value">${timestamp}</stringProp>
          </elementProp>
          <elementProp name="content-type" elementType="Header">
            <stringProp name="Header.name">content-type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="api-version" elementType="Header">
            <stringProp name="Header.name">api-version</stringProp>
            <stringProp name="Header.value">v1</stringProp>
          </elementProp>
          <elementProp name="version" elementType="Header">
            <stringProp name="Header.name">version</stringProp>
            <stringProp name="Header.value">1.0.0</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">gateway</stringProp>
            <stringProp name="Header.value">gateway.abite.com</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="用户端下单流程&amp;订单制作" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">250</stringProp>
        <stringProp name="ThreadGroup.ramp_time">25</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <longProp name="ThreadGroup.start_time">1624600152000</longProp>
        <longProp name="ThreadGroup.end_time">1624600152000</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="gateway" elementType="Argument">
              <stringProp name="Argument.name">gateway</stringProp>
              <stringProp name="Argument.value">gateway.abite.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="version" elementType="Argument">
              <stringProp name="Argument.name">version</stringProp>
              <stringProp name="Argument.value">1.0.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sk" elementType="Argument">
              <stringProp name="Argument.name">sk</stringProp>
              <stringProp name="Argument.value">2AED3785C37C429E93AC89F9B2FBD5E8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="timestamp1" elementType="Argument">
              <stringProp name="Argument.name">timestamp1</stringProp>
              <stringProp name="Argument.value">timestamp</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="path" elementType="Argument">
              <stringProp name="Argument.name">path</stringProp>
              <stringProp name="Argument.value">path</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="version1" elementType="Argument">
              <stringProp name="Argument.name">version1</stringProp>
              <stringProp name="Argument.value">version</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="login" elementType="Argument">
              <stringProp name="Argument.name">login</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/wechat/mini/login</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="applogin" elementType="Argument">
              <stringProp name="Argument.name">applogin</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/loginBySmsCode</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">登录</stringProp>
            </elementProp>
            <elementProp name="dict" elementType="Argument">
              <stringProp name="Argument.name">dict</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/sys/config/dict</stringProp>
              <stringProp name="Argument.desc">数据字典</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="location" elementType="Argument">
              <stringProp name="Argument.name">location</stringProp>
              <stringProp name="Argument.value">/market-capi/customer/city/location/city</stringProp>
              <stringProp name="Argument.desc">定位城市</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="banner" elementType="Argument">
              <stringProp name="Argument.name">banner</stringProp>
              <stringProp name="Argument.value">/market-capi/customer/banner/list</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">首页banner</stringProp>
            </elementProp>
            <elementProp name="recommend" elementType="Argument">
              <stringProp name="Argument.name">recommend</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/shop/recommend</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">首页推荐门店</stringProp>
            </elementProp>
            <elementProp name="dynamicOrder" elementType="Argument">
              <stringProp name="Argument.name">dynamicOrder</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/order/dynamic</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">首页动态订单</stringProp>
            </elementProp>
            <elementProp name="shoplist" elementType="Argument">
              <stringProp name="Argument.name">shoplist</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/shop/list</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">门店列表</stringProp>
            </elementProp>
            <elementProp name="menuShop" elementType="Argument">
              <stringProp name="Argument.name">menuShop</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/menu/shop/get</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">点餐页定位门店</stringProp>
            </elementProp>
            <elementProp name="scan" elementType="Argument">
              <stringProp name="Argument.name">scan</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/shop/scan</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">扫码获取点餐信息</stringProp>
            </elementProp>
            <elementProp name="categoryList" elementType="Argument">
              <stringProp name="Argument.name">categoryList</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/menu/category/list</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">菜单品类列表</stringProp>
            </elementProp>
            <elementProp name="spuList" elementType="Argument">
              <stringProp name="Argument.name">spuList</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/menu/category/spu/list</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">品类下商品列表</stringProp>
            </elementProp>
            <elementProp name="spuDetail" elementType="Argument">
              <stringProp name="Argument.name">spuDetail</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/menu/category/spu/detail</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">商品详情</stringProp>
            </elementProp>
            <elementProp name="spuPrice" elementType="Argument">
              <stringProp name="Argument.name">spuPrice</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/menu/category/spu/price</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">商品SKU价格计算</stringProp>
            </elementProp>
            <elementProp name="packageDetail" elementType="Argument">
              <stringProp name="Argument.name">packageDetail</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/menu/category/package/detail</stringProp>
              <stringProp name="Argument.desc">套餐详情</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="packagePrice" elementType="Argument">
              <stringProp name="Argument.name">packagePrice</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/menu/category/package/price</stringProp>
              <stringProp name="Argument.desc">套餐计算价格</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cartInfo" elementType="Argument">
              <stringProp name="Argument.name">cartInfo</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/cart/info</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">获取购物车信息</stringProp>
            </elementProp>
            <elementProp name="cartPreferentialPrice" elementType="Argument">
              <stringProp name="Argument.name">cartPreferentialPrice</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/cart/preferentialPrice</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">获取购物车优惠价格</stringProp>
            </elementProp>
            <elementProp name="valid" elementType="Argument">
              <stringProp name="Argument.name">valid</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/cart/valid</stringProp>
              <stringProp name="Argument.desc">购物车去下单校验</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="coupon" elementType="Argument">
              <stringProp name="Argument.name">coupon</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/coupon/available</stringProp>
              <stringProp name="Argument.desc">优惠券可用列表</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orderConfirm" elementType="Argument">
              <stringProp name="Argument.name">orderConfirm</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/order/confirm</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">确认订单</stringProp>
            </elementProp>
            <elementProp name="create" elementType="Argument">
              <stringProp name="Argument.name">create</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/order/create</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">创建订单</stringProp>
            </elementProp>
            <elementProp name="mock" elementType="Argument">
              <stringProp name="Argument.name">mock</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/pay/wxpay/mini/mock</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">支付mock</stringProp>
            </elementProp>
            <elementProp name="orderDetail" elementType="Argument">
              <stringProp name="Argument.name">orderDetail</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/order/detail</stringProp>
              <stringProp name="Argument.desc">订单详情</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemOrderList" elementType="Argument">
              <stringProp name="Argument.name">itemOrderList</stringProp>
              <stringProp name="Argument.value">/oscs-sapi/product/item/order/list</stringProp>
              <stringProp name="Argument.desc">订单制作列表</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orderCount" elementType="Argument">
              <stringProp name="Argument.name">orderCount</stringProp>
              <stringProp name="Argument.value">/oscs-sapi/product/item/order/count</stringProp>
              <stringProp name="Argument.desc">订单制作统计数量</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemOrderDetail" elementType="Argument">
              <stringProp name="Argument.name">itemOrderDetail</stringProp>
              <stringProp name="Argument.value">/oscs-sapi/product/item/order/detail</stringProp>
              <stringProp name="Argument.desc">订单制作详情</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemDetail" elementType="Argument">
              <stringProp name="Argument.name">itemDetail</stringProp>
              <stringProp name="Argument.value">/oscs-sapi/product/item/detail</stringProp>
              <stringProp name="Argument.desc">菜品标签详情</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemDetailBatch" elementType="Argument">
              <stringProp name="Argument.name">itemDetailBatch</stringProp>
              <stringProp name="Argument.value">/oscs-sapi/product/item/detail/batch</stringProp>
              <stringProp name="Argument.desc">批量查询菜品标签</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemComplete" elementType="Argument">
              <stringProp name="Argument.name">itemComplete</stringProp>
              <stringProp name="Argument.value">/oscs-sapi/product/item/complete</stringProp>
              <stringProp name="Argument.desc">制作完成</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orderCancel" elementType="Argument">
              <stringProp name="Argument.name">orderCancel</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/order/cancel</stringProp>
              <stringProp name="Argument.desc">取消订单</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cancelReason" elementType="Argument">
              <stringProp name="Argument.name">cancelReason</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/order/cancel/reason</stringProp>
              <stringProp name="Argument.desc">取消订单原因</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="customerOrderList" elementType="Argument">
              <stringProp name="Argument.name">customerOrderList</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/order/list</stringProp>
              <stringProp name="Argument.desc">我的订单列表</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="customerBaseinfo" elementType="Argument">
              <stringProp name="Argument.name">customerBaseinfo</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/baseinfo</stringProp>
              <stringProp name="Argument.desc">个人中心</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="couponList" elementType="Argument">
              <stringProp name="Argument.name">couponList</stringProp>
              <stringProp name="Argument.value">/market-capi/customer/coupon/list</stringProp>
              <stringProp name="Argument.desc">优惠券列表</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orderComplete" elementType="Argument">
              <stringProp name="Argument.name">orderComplete</stringProp>
              <stringProp name="Argument.value">/market-capi/customer/order/complete</stringProp>
              <stringProp name="Argument.desc">取餐完成接口</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="logout" elementType="Argument">
              <stringProp name="Argument.name">logout</stringProp>
              <stringProp name="Argument.value">/core-capi/customer/logout</stringProp>
              <stringProp name="Argument.desc">退出登出</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sk1" elementType="Argument">
              <stringProp name="Argument.name">sk1</stringProp>
              <stringProp name="Argument.value">2F2DF0221DA84B58B22C7FA3516C0A2E</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="定位城市" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;latitude&quot;: &quot;39.9862383355${__Random(1000,9999)}&quot;,&#xd;
    &quot;longitude&quot;: &quot;116.481270887${__Random(1000,9999)}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">${location}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="appKey" elementType="Header">
                <stringProp name="Header.name">appKey</stringProp>
                <stringProp name="Header.value">4B0832A569AB4382BA035833C6CD7FB8</stringProp>
              </elementProp>
              <elementProp name="sign" elementType="Header">
                <stringProp name="Header.name">sign</stringProp>
                <stringProp name="Header.value">${sign}</stringProp>
              </elementProp>
              <elementProp name="timestamp" elementType="Header">
                <stringProp name="Header.name">timestamp</stringProp>
                <stringProp name="Header.value">${timestamp}</stringProp>
              </elementProp>
              <elementProp name="version" elementType="Header">
                <stringProp name="Header.name">version</stringProp>
                <stringProp name="Header.value">1.0.0</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">app-Version</stringProp>
                <stringProp name="Header.value">V1</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51509">401</stringProp>
              <stringProp name="51512">404</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">20</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell 预处理程序" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.test.testMd5;
//import org.apache.commons.codec.digest.DigestUtils;
vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+vars.get(&quot;location&quot;)+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;sk&quot;);
log.info(&quot;=========================================================&quot;);
//log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
//log.info(result);
vars.put(&quot;sign&quot;,result);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="后端监听器" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://10.88.150.168:31501/write?db=jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">定位城市</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">90;95;99</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">定位城市</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
