image: docker:latest  # 【不用改】
variables:
  DEPARTMENT_CODE: bizgroup   # 组织机构【请替换】
  APPLICATION_NAME: joymo-jmeter-test  # 应用名【请替换】
  JMX_DIR: redis-client-stress  # jmeter压测脚本所在文件夹【请替换】 该文件夹下只有一个jmx文件，并且文件名要求文件夹名称一致。该文件夹下还可以放置脚本参数csv文件

cache:
  paths:
    - /
stages:
  - jmeter

test-deploy:
  stage:
    jmeter
  tags:
    - big-log-dev1
  image: swr.cn-north-4.myhuaweicloud.com/joymo-common/kubectl:latest  #【不用改】
  script:
#    报告文件
    - mv template.csv ${APPLICATION_NAME}-${JMX_DIR}-report.csv
    - kubectl cp ${APPLICATION_NAME}-${JMX_DIR}-report.csv -n jmeter `kubectl get pod -n jmeter | grep jmeter-master | awk '{print $1}'`:/
#    jmeter脚本文件
    - mv ${JMX_DIR}/${JMX_DIR}.jmx ${JMX_DIR}/${APPLICATION_NAME}-${JMX_DIR}.jmx
    - kubectl cp ${JMX_DIR}/${APPLICATION_NAME}-${JMX_DIR}.jmx -n jmeter `kubectl get po -n jmeter | grep jmeter-master | awk '{print $1}'`:/
#    csv参数文件
    - if [ `ls ${JMX_DIR}/*.csv | wc -w` -gt 0 ] ; then printf "Get number of slaves\n";
      slave_pods=($(kubectl get po -n "jmeter" | grep jmeter-slave | awk '{print $1}'));
      slavesnum=${#slave_pods[@]};
      slavedigits="${#slavesnum}";
      printf "Number of slaves is %s\n" "${slavesnum}";
      for csvfilefull in ${JMX_DIR}/*.csv;
      do csvfile="${csvfilefull##*/}";
      printf "Processing %s file..\n" "$csvfile";
      j=0;
      for i in $(seq -f "%0${slavedigits}g" 0 $((slavesnum-1)));
      do printf "Copy %s to %s\n" "${csvfile}" "${slave_pods[j]}";
      kubectl -n jmeter cp ${JMX_DIR}/${csvfile} ${slave_pods[j]}:/;
      let j=j+1;
      done;
      done;
      fi
#    执行压测并获取压测报告
    - master_pod=($(kubectl get pod -n jmeter | grep jmeter-master | awk '{print $1}'));
      if [ `kubectl exec -ti -n jmeter ${master_pod} -- /bin/bash /load_test ${APPLICATION_NAME}-${JMX_DIR}.jmx ${APPLICATION_NAME}-${JMX_DIR}-report.csv | grep 'Engine is busy - please try later' | wc -w` -gt 0 ] ; then printf "Engine is busy - please try later\n"; exit 1;
      else kubectl cp jmeter/`kubectl get pod -n jmeter | grep jmeter-master | awk '{print $1}'`:${APPLICATION_NAME}-${JMX_DIR}-report.csv ${APPLICATION_NAME}-${JMX_DIR}-report.csv;
      fi
  artifacts:
    paths:
      - ${APPLICATION_NAME}-${JMX_DIR}-report.csv
  only:
    - develop-1