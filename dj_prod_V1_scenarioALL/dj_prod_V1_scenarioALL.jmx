<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="到家接口" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">E:\jmeter\yummy\yummy_V2\pre\testMd5.jar</stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="shopMdCode" enabled="true">
        <stringProp name="filename">/shopMdCode.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">shopMdCode</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="itemNo" enabled="true">
        <stringProp name="filename">/itemNo.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">itemNo</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="lbs" enabled="true">
        <stringProp name="filename">/lbs.csv</stringProp>
        <stringProp name="fileEncoding">UTF-8</stringProp>
        <stringProp name="variableNames">cityMdCode,lon,lat</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="gateway" elementType="Argument">
            <stringProp name="Argument.name">gateway</stringProp>
            <stringProp name="Argument.value">gateway.abite.com</stringProp>
            <stringProp name="Argument.desc">测试一环境</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="version" elementType="Argument">
            <stringProp name="Argument.name">version</stringProp>
            <stringProp name="Argument.value">1.0.0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="appkey" elementType="Argument">
            <stringProp name="Argument.name">appkey</stringProp>
            <stringProp name="Argument.value">5fbb7622fc154f9ca177e6339c222ccb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="signKey" elementType="Argument">
            <stringProp name="Argument.name">signKey</stringProp>
            <stringProp name="Argument.value">eb61231608f46e896bc3d44ed1138b0f</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="appkey_ros" elementType="Argument">
            <stringProp name="Argument.name">appkey_ros</stringProp>
            <stringProp name="Argument.value">69665a52b9434f3f357f678c2ade9528</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="signKey_ros" elementType="Argument">
            <stringProp name="Argument.name">signKey_ros</stringProp>
            <stringProp name="Argument.value">40231adcfc0cf33b3e8e7dee9cb2027e</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="timestamp1" elementType="Argument">
            <stringProp name="Argument.name">timestamp1</stringProp>
            <stringProp name="Argument.value">timestamp</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="version1" elementType="Argument">
            <stringProp name="Argument.name">version1</stringProp>
            <stringProp name="Argument.value">version</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="path" elementType="Argument">
            <stringProp name="Argument.name">path</stringProp>
            <stringProp name="Argument.value">path</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="loginBySmsCode" elementType="Argument">
            <stringProp name="Argument.name">loginBySmsCode</stringProp>
            <stringProp name="Argument.value">/dj-api/customer/loginBySmsCode</stringProp>
            <stringProp name="Argument.desc">APP短信验证码登录</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="positionList" elementType="Argument">
            <stringProp name="Argument.name">positionList</stringProp>
            <stringProp name="Argument.value">/dj-api/customer/position/list</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">获取广告位</stringProp>
          </elementProp>
          <elementProp name="otaCheckUpdate" elementType="Argument">
            <stringProp name="Argument.name">otaCheckUpdate</stringProp>
            <stringProp name="Argument.value">/dj-api/ota/checkUpdate</stringProp>
            <stringProp name="Argument.desc">app监测是否升级</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="homePageGetShopDetail" elementType="Argument">
            <stringProp name="Argument.name">homePageGetShopDetail</stringProp>
            <stringProp name="Argument.value">/dj-api/shop/homePageGetShopDetail</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">首页获取门店定位</stringProp>
          </elementProp>
          <elementProp name="newItems" elementType="Argument">
            <stringProp name="Argument.name">newItems</stringProp>
            <stringProp name="Argument.value">/dj-api/item/newItems</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">本月新菜</stringProp>
          </elementProp>
          <elementProp name="hotSaleItems" elementType="Argument">
            <stringProp name="Argument.name">hotSaleItems</stringProp>
            <stringProp name="Argument.value">/dj-api/item/hotSaleItems</stringProp>
            <stringProp name="Argument.desc">热销爆款</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="discountShowItems" elementType="Argument">
            <stringProp name="Argument.name">discountShowItems</stringProp>
            <stringProp name="Argument.value">/dj-api/discount/showItems</stringProp>
            <stringProp name="Argument.desc">首页特惠专区展示列表</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="discountAllItems" elementType="Argument">
            <stringProp name="Argument.name">discountAllItems</stringProp>
            <stringProp name="Argument.value">/dj-api/discount/allItems</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">特惠页面商品分组列表</stringProp>
          </elementProp>
          <elementProp name="newerAreaGetNewerAreaInfo" elementType="Argument">
            <stringProp name="Argument.name">newerAreaGetNewerAreaInfo</stringProp>
            <stringProp name="Argument.value">/dj-api/newerArea/getNewerAreaInfo</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">获取用户新人专区信息</stringProp>
          </elementProp>
          <elementProp name="newerAreaGetSettlePrice" elementType="Argument">
            <stringProp name="Argument.name">newerAreaGetSettlePrice</stringProp>
            <stringProp name="Argument.value">/dj-api/newerArea/getSettlePrice</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">获取用户新人结算算价</stringProp>
          </elementProp>
          <elementProp name="pointsDetail" elementType="Argument">
            <stringProp name="Argument.name">pointsDetail</stringProp>
            <stringProp name="Argument.value">/dj-api/points/detail</stringProp>
            <stringProp name="Argument.desc">积分详情</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cartListHot" elementType="Argument">
            <stringProp name="Argument.name">cartListHot</stringProp>
            <stringProp name="Argument.value">/dj-api/cart/list/hot</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">大家都在买购物车页面推荐</stringProp>
          </elementProp>
          <elementProp name="cartGetShoppingCart" elementType="Argument">
            <stringProp name="Argument.name">cartGetShoppingCart</stringProp>
            <stringProp name="Argument.value">/dj-api/cart/getShoppingCart</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">查询购物车列表</stringProp>
          </elementProp>
          <elementProp name="cartMaxCount" elementType="Argument">
            <stringProp name="Argument.name">cartMaxCount</stringProp>
            <stringProp name="Argument.value">/dj-api/cart/maxCount</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">购物车整体数量上限</stringProp>
          </elementProp>
          <elementProp name="shopSearchShopList" elementType="Argument">
            <stringProp name="Argument.name">shopSearchShopList</stringProp>
            <stringProp name="Argument.value">/dj-api/shop/searchShopList</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">自提门店列表</stringProp>
          </elementProp>
          <elementProp name="itemMenu" elementType="Argument">
            <stringProp name="Argument.name">itemMenu</stringProp>
            <stringProp name="Argument.value">/dj-api/item/menu</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">菜单查询</stringProp>
          </elementProp>
          <elementProp name="marketingGetSearchPageContent" elementType="Argument">
            <stringProp name="Argument.name">marketingGetSearchPageContent</stringProp>
            <stringProp name="Argument.value">/dj-api/marketing/getSearchPageContent</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">获取搜索页内容</stringProp>
          </elementProp>
          <elementProp name="itemDetail" elementType="Argument">
            <stringProp name="Argument.name">itemDetail</stringProp>
            <stringProp name="Argument.value">/dj-api/item/itemDetail</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">菜品详情</stringProp>
          </elementProp>
          <elementProp name="personIsCollect" elementType="Argument">
            <stringProp name="Argument.name">personIsCollect</stringProp>
            <stringProp name="Argument.value">/dj-api/person/isCollect</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">查询商品是否已经收藏</stringProp>
          </elementProp>
          <elementProp name="getHotCombinationCollocationList" elementType="Argument">
            <stringProp name="Argument.name">getHotCombinationCollocationList</stringProp>
            <stringProp name="Argument.value">/dj-api/item/getHotCombinationCollocationList</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">获取热门组合搭配</stringProp>
          </elementProp>
          <elementProp name="cartAddShoppingCart" elementType="Argument">
            <stringProp name="Argument.name">cartAddShoppingCart</stringProp>
            <stringProp name="Argument.value">/dj-api/cart/addShoppingCart</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">添加购物车商品数量</stringProp>
          </elementProp>
          <elementProp name="getPersonalInfo" elementType="Argument">
            <stringProp name="Argument.name">getPersonalInfo</stringProp>
            <stringProp name="Argument.value">/dj-api/person/getPersonalInfo</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">查询个人信息</stringProp>
          </elementProp>
          <elementProp name="getConfig" elementType="Argument">
            <stringProp name="Argument.name">getConfig</stringProp>
            <stringProp name="Argument.value">/dj-api/config/getConfig</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">配置中心</stringProp>
          </elementProp>
          <elementProp name="vocherAvailableCount" elementType="Argument">
            <stringProp name="Argument.name">vocherAvailableCount</stringProp>
            <stringProp name="Argument.value">/dj-api/vocher/availableCount</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">查询可用优惠券数量</stringProp>
          </elementProp>
          <elementProp name="orderStatusAmount" elementType="Argument">
            <stringProp name="Argument.name">orderStatusAmount</stringProp>
            <stringProp name="Argument.value">/dj-api/order/statusAmount</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">查询各状态订单数</stringProp>
          </elementProp>
          <elementProp name="orderGetOrderList" elementType="Argument">
            <stringProp name="Argument.name">orderGetOrderList</stringProp>
            <stringProp name="Argument.value">/dj-api/order/getOrderList</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">获取订单列表</stringProp>
          </elementProp>
          <elementProp name="confirmOrder" elementType="Argument">
            <stringProp name="Argument.name">confirmOrder</stringProp>
            <stringProp name="Argument.value">/dj-api/order/confirmOrder</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">确认订单</stringProp>
          </elementProp>
          <elementProp name="orderShopPreSaleTimeList" elementType="Argument">
            <stringProp name="Argument.name">orderShopPreSaleTimeList</stringProp>
            <stringProp name="Argument.value">/dj-api/order/shopPreSaleTimeList</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">确认订单页预约时间列表</stringProp>
          </elementProp>
          <elementProp name="addressListForOrder" elementType="Argument">
            <stringProp name="Argument.name">addressListForOrder</stringProp>
            <stringProp name="Argument.value">/dj-api/address/listForOrder</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">确认订单页获取地址列表</stringProp>
          </elementProp>
          <elementProp name="getConfirmOrderCouponList" elementType="Argument">
            <stringProp name="Argument.name">getConfirmOrderCouponList</stringProp>
            <stringProp name="Argument.value">/dj-api/voucher/getConfirmOrderCouponList</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">确认订单页获取优惠券列表</stringProp>
          </elementProp>
          <elementProp name="getConfirmOrderCouponCount" elementType="Argument">
            <stringProp name="Argument.name">getConfirmOrderCouponCount</stringProp>
            <stringProp name="Argument.value">/dj-api/voucher/getConfirmOrderCouponCount</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">确认订单页获取优惠券数量</stringProp>
          </elementProp>
          <elementProp name="orderPayTypeList" elementType="Argument">
            <stringProp name="Argument.name">orderPayTypeList</stringProp>
            <stringProp name="Argument.value">/dj-api/customer/pay/type/list</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">确认订单页获取支付列表</stringProp>
          </elementProp>
          <elementProp name="orderGetRemarkList" elementType="Argument">
            <stringProp name="Argument.name">orderGetRemarkList</stringProp>
            <stringProp name="Argument.value">/dj-api/order/getRemarkList</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">确认订单页获取备注列表</stringProp>
          </elementProp>
          <elementProp name="submitOrder" elementType="Argument">
            <stringProp name="Argument.name">submitOrder</stringProp>
            <stringProp name="Argument.value">/dj-api/order/submitOrder</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">提交订单</stringProp>
          </elementProp>
          <elementProp name="wxpayMock" elementType="Argument">
            <stringProp name="Argument.name">wxpayMock</stringProp>
            <stringProp name="Argument.value">/dj-api/customer/pay/wxpay/app/mock</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">微信支付mock</stringProp>
          </elementProp>
          <elementProp name="getOrderDetail" elementType="Argument">
            <stringProp name="Argument.name">getOrderDetail</stringProp>
            <stringProp name="Argument.value">/dj-api/order/getOrderDetail</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">获取订单详情</stringProp>
          </elementProp>
          <elementProp name="getCancelReasonList" elementType="Argument">
            <stringProp name="Argument.name">getCancelReasonList</stringProp>
            <stringProp name="Argument.value">/dj-api/order/getCancelReasonList</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">获取取消订单原因</stringProp>
          </elementProp>
          <elementProp name="cancelOrder" elementType="Argument">
            <stringProp name="Argument.name">cancelOrder</stringProp>
            <stringProp name="Argument.value">/dj-api/order/cancelOrder</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">取消订单</stringProp>
          </elementProp>
          <elementProp name="rosSmsLogin" elementType="Argument">
            <stringProp name="Argument.name">rosSmsLogin</stringProp>
            <stringProp name="Argument.value">/djros-api/user/smsLogin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ROS短信验证码登录</stringProp>
          </elementProp>
          <elementProp name="rosGetBillList" elementType="Argument">
            <stringProp name="Argument.name">rosGetBillList</stringProp>
            <stringProp name="Argument.value">/djros-api/common/getBillList</stringProp>
            <stringProp name="Argument.desc">ROS获取小票列表</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rosCountByTakeType" elementType="Argument">
            <stringProp name="Argument.name">rosCountByTakeType</stringProp>
            <stringProp name="Argument.value">/djros-api/order/countByTakeType</stringProp>
            <stringProp name="Argument.desc">ROS获取订单数量信息</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rosOrderDetail" elementType="Argument">
            <stringProp name="Argument.name">rosOrderDetail</stringProp>
            <stringProp name="Argument.value">/djros-api/order/detail</stringProp>
            <stringProp name="Argument.desc">ROS订单商品详情</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rosOrderList" elementType="Argument">
            <stringProp name="Argument.name">rosOrderList</stringProp>
            <stringProp name="Argument.value">/djros-api/order/list</stringProp>
            <stringProp name="Argument.desc">ROS获取订单列表</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rosQueryProductList" elementType="Argument">
            <stringProp name="Argument.name">rosQueryProductList</stringProp>
            <stringProp name="Argument.value">/djros-api/label/queryProductList</stringProp>
            <stringProp name="Argument.desc">ROS通过类目查询产品列表</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rosCountByStatus" elementType="Argument">
            <stringProp name="Argument.name">rosCountByStatus</stringProp>
            <stringProp name="Argument.value">/djros-api/order/countByStatus</stringProp>
            <stringProp name="Argument.desc">ROS根据取餐类型获取各状态订单数</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rosGetStatus" elementType="Argument">
            <stringProp name="Argument.name">rosGetStatus</stringProp>
            <stringProp name="Argument.value">/djros-api/pay/getStatus</stringProp>
            <stringProp name="Argument.desc">ROS查询订单支付状态</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rosQueryShopProductList" elementType="Argument">
            <stringProp name="Argument.name">rosQueryShopProductList</stringProp>
            <stringProp name="Argument.value">/djros-api/cash/queryShopProductList</stringProp>
            <stringProp name="Argument.desc">ROS查询门店产品列表</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rosOrderVerification" elementType="Argument">
            <stringProp name="Argument.name">rosOrderVerification</stringProp>
            <stringProp name="Argument.value">/djros-api/order/verification</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ROS订单核销</stringProp>
          </elementProp>
          <elementProp name="rosConfirmExpressOrder" elementType="Argument">
            <stringProp name="Argument.name">rosConfirmExpressOrder</stringProp>
            <stringProp name="Argument.value">/djros-api/express/confirmExpressOrder</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ROS快递发货</stringProp>
          </elementProp>
          <elementProp name="rosConfirmDispatchOrder" elementType="Argument">
            <stringProp name="Argument.name">rosConfirmDispatchOrder</stringProp>
            <stringProp name="Argument.value">/djros-api/dispatch/confirmDispatchOrder</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ROS外卖发货</stringProp>
          </elementProp>
          <elementProp name="rosOrderCreate" elementType="Argument">
            <stringProp name="Argument.name">rosOrderCreate</stringProp>
            <stringProp name="Argument.value">/djros-api/order/create</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ROS创建订单</stringProp>
          </elementProp>
          <elementProp name="rosGetOrderRefundReason" elementType="Argument">
            <stringProp name="Argument.name">rosGetOrderRefundReason</stringProp>
            <stringProp name="Argument.value">/djros-api/orderReturn/getOrderRefundReason</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ROS查询退货原因</stringProp>
          </elementProp>
          <elementProp name="rosCreateRefundFoodOrder" elementType="Argument">
            <stringProp name="Argument.name">rosCreateRefundFoodOrder</stringProp>
            <stringProp name="Argument.value">/djros-api/orderReturn/createRefundFoodOrder</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ROS确认退货</stringProp>
          </elementProp>
          <elementProp name="rosCalculateRefundMoney" elementType="Argument">
            <stringProp name="Argument.name">rosCalculateRefundMoney</stringProp>
            <stringProp name="Argument.value">/djros-api/orderReturn/calculateRefundMoney</stringProp>
            <stringProp name="Argument.desc">ROS根据退货商品计算退款总金额</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rosSendVerificationCode" elementType="Argument">
            <stringProp name="Argument.name">rosSendVerificationCode</stringProp>
            <stringProp name="Argument.value">/djros-api/user/sendVerificationCode</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">获取验证码</stringProp>
          </elementProp>
          <elementProp name="addressAdd" elementType="Argument">
            <stringProp name="Argument.name">addressAdd</stringProp>
            <stringProp name="Argument.value">/dj-api/address/add</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">添加地址</stringProp>
          </elementProp>
          <elementProp name="memberPointAdd" elementType="Argument">
            <stringProp name="Argument.name">memberPointAdd</stringProp>
            <stringProp name="Argument.value">/dj-api/customer/member/autotest/memberPointAdd</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">发放积分（奖励金）</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie管理器" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">api-version</stringProp>
            <stringProp name="Header.value">v4</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">appKey</stringProp>
            <stringProp name="Header.value">${appkey}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">version</stringProp>
            <stringProp name="Header.value">${version}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">content-type</stringProp>
            <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">timestamp</stringProp>
            <stringProp name="Header.value">${timestamp}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">sign</stringProp>
            <stringProp name="Header.value">${sign}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">token</stringProp>
            <stringProp name="Header.value">${__property(token)}</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="前期数据准备" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">5000</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="mobile" enabled="true">
          <stringProp name="TestPlan.comments">111号段5000用户</stringProp>
          <stringProp name="filename">/mobile.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">mobile</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="验证码登录-loginBySmsCode" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
    &quot;smsCode&quot;: &quot;168168&quot;,&#xd;
    &quot;deviceType&quot;:&quot;2&quot;,&#xd;
    &quot;deviceName&quot;:&quot;&quot;,&#xd;
    &quot;deviceNo&quot;:&quot;&quot;,&#xd;
    &quot;registrationId&quot;:&quot;1104a8979267121b703&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">${loginBySmsCode}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="memberId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">memberId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.memberId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则提取token" enabled="true">
          <stringProp name="RegexExtractor.useHeaders">false</stringProp>
          <stringProp name="RegexExtractor.refname">token</stringProp>
          <stringProp name="RegexExtractor.regex">&quot;token&quot;.&quot;(.+?)&quot;</stringProp>
          <stringProp name="RegexExtractor.template">$1$</stringProp>
          <stringProp name="RegexExtractor.default">null</stringProp>
          <stringProp name="RegexExtractor.match_number">0</stringProp>
        </RegexExtractor>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="设置token为全局变量" enabled="true">
          <stringProp name="BeanShellSampler.query">${__setProperty(token,${token},)}</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加地址-addressAdd" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;contact&quot;: &quot;压测会员&quot;,&#xd;
	&quot;contactPhone&quot;: &quot;${mobile}&quot;,&#xd;
	&quot;province&quot;: &quot;西藏省&quot;,&#xd;
	&quot;city&quot;: &quot;林芝市&quot;,&#xd;
	&quot;cityMdCode&quot;: &quot;540400&quot;,&#xd;
	&quot;county&quot;: &quot;墨脱县&quot;,&#xd;
	&quot;location&quot;: &quot;墨脱镇&quot;,&#xd;
	&quot;lng&quot;: 95.337347,&#xd;
	&quot;lat&quot;: 29.332672,&#xd;
	&quot;sex&quot;: 0,&#xd;
	&quot;coordinatesType&quot;: 1,&#xd;
	&quot;address&quot;: &quot;墨脱村双拥路中学&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">${addressAdd}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发放积分（奖励金）-memberPointAdd" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;point&quot;: 9999,&#xd;
  &quot;businessNo&quot;: &quot;yummy&quot;,&#xd;
  &quot;memberId&quot;: ${memberId},&#xd;
  &quot;origin&quot;: 0&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">${memberPointAdd}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="到家APP-首页加载" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="验证码登录-loginBySmsCode" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
    &quot;smsCode&quot;: &quot;168168&quot;,&#xd;
    &quot;deviceType&quot;:&quot;2&quot;,&#xd;
    &quot;deviceName&quot;:&quot;&quot;,&#xd;
    &quot;deviceNo&quot;:&quot;&quot;,&#xd;
    &quot;registrationId&quot;:&quot;1104a8979267121b703&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${loginBySmsCode}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="mobile" enabled="true">
              <stringProp name="TestPlan.comments">111号段500用户</stringProp>
              <stringProp name="filename">/mobile-homePage.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">mobile</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则提取token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token&quot;.&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="设置token为全局变量" enabled="true">
            <stringProp name="BeanShellSampler.query">${__setProperty(token,${token},)}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="首页获取门店定位-homePageGetShopDetail" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;takeFoodMode&quot;: ${__Random(1,3,)},&#xd;
	&quot;customerLongitude&quot;: ${lon},&#xd;
	&quot;customerLatitude&quot;: ${lat}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${homePageGetShopDetail}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取广告位-positionList-首页-顶部资源位" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Ad-sjgf-home-head-5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                </elementProp>
                <elementProp name="cityMdCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">cityMdCode</stringProp>
                </elementProp>
                <elementProp name="shopMdCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">shopMdCode</stringProp>
                </elementProp>
                <elementProp name="viewPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sjgf-app-home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">viewPage</stringProp>
                </elementProp>
                <elementProp name="sessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sessionId</stringProp>
                </elementProp>
                <elementProp name="memberId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">memberId</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${positionList}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取广告位-positionList-首页-顶部品牌亮点" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Ad-sjgf-home-head-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                </elementProp>
                <elementProp name="viewPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sjgf-app-home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">viewPage</stringProp>
                </elementProp>
                <elementProp name="memberId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">memberId</stringProp>
                </elementProp>
                <elementProp name="sessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sessionId</stringProp>
                </elementProp>
                <elementProp name="cityMdCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">cityMdCode</stringProp>
                </elementProp>
                <elementProp name="shopMdCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">shopMdCode</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${positionList}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取广告位-positionList-首页-顶部金刚区1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Ad-sjgf-home-JinGang-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                </elementProp>
                <elementProp name="memberId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">memberId</stringProp>
                </elementProp>
                <elementProp name="sessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sessionId</stringProp>
                </elementProp>
                <elementProp name="viewPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sjgf-app-home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">viewPage</stringProp>
                </elementProp>
                <elementProp name="cityMdCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">cityMdCode</stringProp>
                </elementProp>
                <elementProp name="shopMdCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">shopMdCode</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${positionList}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取广告位-positionList-首页-顶部金刚区2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Ad-sjgf-home-JinGang-2-style1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                </elementProp>
                <elementProp name="memberId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">memberId</stringProp>
                </elementProp>
                <elementProp name="sessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sessionId</stringProp>
                </elementProp>
                <elementProp name="viewPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sjgf-app-home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">viewPage</stringProp>
                </elementProp>
                <elementProp name="cityMdCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">cityMdCode</stringProp>
                </elementProp>
                <elementProp name="shopMdCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">shopMdCode</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${positionList}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取广告位-positionList-首页-栏目1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Ad-sjgf-home-column-003</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                </elementProp>
                <elementProp name="memberId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">memberId</stringProp>
                </elementProp>
                <elementProp name="sessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sessionId</stringProp>
                </elementProp>
                <elementProp name="viewPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sjgf-app-home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">viewPage</stringProp>
                </elementProp>
                <elementProp name="cityMdCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">cityMdCode</stringProp>
                </elementProp>
                <elementProp name="shopMdCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">shopMdCode</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${positionList}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取广告位-positionList-首页-栏目2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Ad-sjgf-home-column-004</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                </elementProp>
                <elementProp name="memberId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">memberId</stringProp>
                </elementProp>
                <elementProp name="sessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sessionId</stringProp>
                </elementProp>
                <elementProp name="viewPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">viewPage</stringProp>
                </elementProp>
                <elementProp name="cityMdCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">cityMdCode</stringProp>
                </elementProp>
                <elementProp name="shopMdCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">shopMdCode</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${positionList}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取广告位-positionList-首页-腰部广告位" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Ad-sjgf-home-middle-3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                </elementProp>
                <elementProp name="memberId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">memberId</stringProp>
                </elementProp>
                <elementProp name="sessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sessionId</stringProp>
                </elementProp>
                <elementProp name="viewPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sjgf-app-home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">viewPage</stringProp>
                </elementProp>
                <elementProp name="cityMdCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">cityMdCode</stringProp>
                </elementProp>
                <elementProp name="shopMdCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">shopMdCode</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${positionList}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取广告位-positionList-首页-新人专区-顶部资源位" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Ad-sjgf-newcomers-head-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                </elementProp>
                <elementProp name="memberId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">memberId</stringProp>
                </elementProp>
                <elementProp name="sessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sessionId</stringProp>
                </elementProp>
                <elementProp name="viewPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sjgf-app-home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">viewPage</stringProp>
                </elementProp>
                <elementProp name="cityMdCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">cityMdCode</stringProp>
                </elementProp>
                <elementProp name="shopMdCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">shopMdCode</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${positionList}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取广告位-positionList-首页底部-我要开业--【常规】1个入口" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Ad-sjgf-home-bottom-style2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                </elementProp>
                <elementProp name="memberId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">memberId</stringProp>
                </elementProp>
                <elementProp name="sessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sessionId</stringProp>
                </elementProp>
                <elementProp name="viewPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">viewPage</stringProp>
                </elementProp>
                <elementProp name="cityMdCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">cityMdCode</stringProp>
                </elementProp>
                <elementProp name="shopMdCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">shopMdCode</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${positionList}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="app监测是否升级-otaCheckUpdate" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;currentVersion&quot;: 202,&#xd;
	&quot;appChannel&quot;: ${__Random(401,402,)}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${otaCheckUpdate}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="本月新菜-newItems" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: &quot;${shopMdCode}&quot;,&#xd;
	&quot;rootMenuCodes&quot;: [&quot;hot#quickCooking&quot;],&#xd;
	&quot;takeFoodMode&quot;: ${__Random(1,3,)}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${newItems}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="热销爆款-hotSaleItems" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: &quot;${shopMdCode}&quot;,&#xd;
	&quot;rootMenuCodes&quot;: [&quot;hot#preProductionFoodTop&quot;],&#xd;
	&quot;takeFoodMode&quot;: ${__Random(1,3,)}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${hotSaleItems}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="首页特惠专区展示列表-discountShowItems" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: &quot;${shopMdCode}&quot;,&#xd;
	&quot;takeFoodMode&quot;: ${__Random(1,3,)}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${discountShowItems}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="特惠页面商品分组列表-discountAllItems" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: &quot;${shopMdCode}&quot;,&#xd;
	&quot;takeFoodMode&quot;: ${__Random(1,3,)}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${discountAllItems}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取用户新人专区信息-newerAreaGetNewerAreaInfo" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;takeFoodMode&quot;: ${__Random(1,3,)},&#xd;
	&quot;isQueryAllGoods&quot;: 0&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${newerAreaGetNewerAreaInfo}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取用户新人结算算价-newerAreaGetSettlePrice" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;takeFoodMode&quot;: ${__Random(1,3,)},&#xd;
	&quot;goodsList&quot;: [{&#xd;
		&quot;spuCode&quot;: &quot;SP1019&quot;,&#xd;
		&quot;count&quot;: 1&#xd;
	}]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${newerAreaGetSettlePrice}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="积分详情-pointsDetail" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${pointsDetail}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="大家都在买购物车页面推荐-cartListHot" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;takeFoodMode&quot;: ${__Random(1,3,)},&#xd;
	&quot;itemNos&quot;: [&quot;SP1082&quot;, &quot;SP1030&quot;, &quot;SP1019&quot;, &quot;SP1083&quot;, &quot;SP1003&quot;, &quot;SP1009&quot;, &quot;SP1045&quot;, &quot;SP1085&quot;]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${cartListHot}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询购物车列表-cartGetShoppingCart" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;cartGoodsItemList&quot;: [{&#xd;
		&quot;itemNo&quot;: &quot;SP1082&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 1,&#xd;
		&quot;addCartTime&quot;: 1650190118081&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1030&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1650190174883&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1019&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 1,&#xd;
		&quot;addCartTime&quot;: 1651065632427&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1083&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065637427&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1003&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065640376&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1009&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065642444&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1045&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065644661&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1085&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065649877&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1005&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065672246&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1064&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065673745&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1008&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065693947&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1011&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065700282&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1016&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065704497&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1012&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065708135&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1041&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065720698&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1038&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065723364&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1207&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065730916&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1080&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 1,&#xd;
		&quot;addCartTime&quot;: 1651065763967&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1217&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 1,&#xd;
		&quot;addCartTime&quot;: 1651065769984&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1078&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 1,&#xd;
		&quot;addCartTime&quot;: 1651065777286&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1079&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065784318&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1017&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065833355&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1015&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065837223&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1044&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065857240&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1094&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651066351414&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1266&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651067473716&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1267&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651067474583&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1264&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651067477450&#xd;
	}],&#xd;
	&quot;shopId&quot;: ${shopMdCode},&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;tookFoodMode&quot;: 1,&#xd;
	&quot;operateType&quot;: 1,&#xd;
	&quot;longitude&quot;: ${lon},&#xd;
	&quot;latitude&quot;: ${lat}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${cartGetShoppingCart}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="购物车整体数量上限-cartMaxCount" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${cartMaxCount}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="到家APP-商品" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">80</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="验证码登录-loginBySmsCode" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
    &quot;smsCode&quot;: &quot;168168&quot;,&#xd;
    &quot;deviceType&quot;:&quot;2&quot;,&#xd;
    &quot;deviceName&quot;:&quot;&quot;,&#xd;
    &quot;deviceNo&quot;:&quot;&quot;,&#xd;
    &quot;registrationId&quot;:&quot;1104a8979267121b703&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${loginBySmsCode}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="mobile" enabled="true">
              <stringProp name="TestPlan.comments">111号段500用户</stringProp>
              <stringProp name="filename">/mobile-product.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">mobile</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则提取token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token&quot;.&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="设置token为全局变量" enabled="true">
            <stringProp name="BeanShellSampler.query">${__setProperty(token,${token},)}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="自提门店列表-shopSearchShopList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;cityMdCode&quot;: ${cityMdCode},&#xd;
	&quot;shopName&quot;: null,&#xd;
	&quot;latitude&quot;: ${lat},&#xd;
	&quot;longitude&quot;: ${lon},&#xd;
	&quot;takeFoodMode&quot;: &quot;${__Random(1,3,)}&quot;,&#xd;
	&quot;sameCity&quot;: 1,&#xd;
	&quot;pageNo&quot;: 1,&#xd;
	&quot;pageSize&quot;: 20&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${shopSearchShopList}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="lbs" enabled="true">
              <stringProp name="filename">/lbs.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">cityMdCode,lon,lat</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="菜单查询-itemMenu" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;takeFoodMode&quot;: ${__Random(1,3,)}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${itemMenu}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取搜索页内容-marketingGetSearchPageContent" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: &quot;${shopMdCode}&quot;,&#xd;
	&quot;takeFoodMode&quot;: ${__Random(1,3,)}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${marketingGetSearchPageContent}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="菜品详情-itemDetail" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: &quot;${shopMdCode}&quot;,&#xd;
	&quot;itemNo&quot;: &quot;${itemNo}&quot;,&#xd;
	&quot;takeFoodMode&quot;: &quot;${__Random(1,3,)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${itemDetail}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询商品是否已经收藏-personIsCollect" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;goodsNo&quot;: &quot;${itemNo}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${personIsCollect}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取热门组合搭配-getHotCombinationCollocationList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;origin&quot;: 2,&#xd;
	&quot;shopMdCode&quot;: &quot;${shopMdCode}&quot;,&#xd;
	&quot;itemNo&quot;: &quot;${itemNo}&quot;,&#xd;
	&quot;takeFoodMode&quot;: &quot;${__Random(1,3,)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${getHotCombinationCollocationList}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="到家APP-购物车" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">70</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="验证码登录-loginBySmsCode" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
    &quot;smsCode&quot;: &quot;168168&quot;,&#xd;
    &quot;deviceType&quot;:&quot;2&quot;,&#xd;
    &quot;deviceName&quot;:&quot;&quot;,&#xd;
    &quot;deviceNo&quot;:&quot;&quot;,&#xd;
    &quot;registrationId&quot;:&quot;1104a8979267121b703&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${loginBySmsCode}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="mobile" enabled="true">
              <stringProp name="TestPlan.comments">111号段500用户</stringProp>
              <stringProp name="filename">mobile-cart.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">mobile</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则提取token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token&quot;.&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="设置token为全局变量" enabled="true">
            <stringProp name="BeanShellSampler.query">${__setProperty(token,${token},)}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加购物车商品数量-cartAddShoppingCart" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;shopId&quot;: ${shopMdCode},&#xd;
	&quot;operateType&quot;: 2,&#xd;
	&quot;cartGoodsItemList&quot;: [{&#xd;
		&quot;itemNo&quot;: &quot;SP1082&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 3,&#xd;
		&quot;selectedStatus&quot;: 1,&#xd;
		&quot;addCartTime&quot;: ${__time(,)}&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1030&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 2,&#xd;
		&quot;selectedStatus&quot;: 1,&#xd;
		&quot;addCartTime&quot;: ${__time(,)}&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1019&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 2,&#xd;
		&quot;selectedStatus&quot;: 1,&#xd;
		&quot;addCartTime&quot;: ${__time(,)}&#xd;
	}],&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;tookFoodMode&quot;: 1,&#xd;
	&quot;longitude&quot;: null,&#xd;
	&quot;latitude&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${cartAddShoppingCart}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询购物车列表-cartGetShoppingCart" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;cartGoodsItemList&quot;: [{&#xd;
		&quot;itemNo&quot;: &quot;SP1082&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 1,&#xd;
		&quot;addCartTime&quot;: 1650190118081&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1030&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1650190174883&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1019&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 1,&#xd;
		&quot;addCartTime&quot;: 1651065632427&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1083&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065637427&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1003&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065640376&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1009&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065642444&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1045&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065644661&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1085&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065649877&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1005&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065672246&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1064&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065673745&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1008&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065693947&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1011&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065700282&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1016&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065704497&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1012&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065708135&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1041&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065720698&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1038&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065723364&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1207&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065730916&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1080&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 1,&#xd;
		&quot;addCartTime&quot;: 1651065763967&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1217&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 1,&#xd;
		&quot;addCartTime&quot;: 1651065769984&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1078&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 1,&#xd;
		&quot;addCartTime&quot;: 1651065777286&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1079&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065784318&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1017&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065833355&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1015&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065837223&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1044&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651065857240&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1094&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651066351414&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1266&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651067473716&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1267&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651067474583&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1264&quot;,&#xd;
		&quot;skuId&quot;: null,&#xd;
		&quot;buyNum&quot;: 1,&#xd;
		&quot;selectedStatus&quot;: 0,&#xd;
		&quot;addCartTime&quot;: 1651067477450&#xd;
	}],&#xd;
	&quot;shopId&quot;: ${shopMdCode},&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;tookFoodMode&quot;: 1,&#xd;
	&quot;operateType&quot;: 1,&#xd;
	&quot;longitude&quot;: ${lon},&#xd;
	&quot;latitude&quot;: ${lat}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${cartGetShoppingCart}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="lbs" enabled="true">
              <stringProp name="filename">/lbs.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">lon,lat</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="购物车整体数量上限-cartMaxCount" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${cartMaxCount}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="大家都在买购物车页面推荐-cartListHot" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;takeFoodMode&quot;: ${__Random(1,3,)},&#xd;
	&quot;itemNos&quot;: [ &quot;SP1003&quot;]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${cartListHot}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="到家APP-自提下单" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="验证码登录-loginBySmsCode" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
    &quot;smsCode&quot;: &quot;168168&quot;,&#xd;
    &quot;deviceType&quot;:&quot;2&quot;,&#xd;
    &quot;deviceName&quot;:&quot;&quot;,&#xd;
    &quot;deviceNo&quot;:&quot;&quot;,&#xd;
    &quot;registrationId&quot;:&quot;1104a8979267121b703&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${loginBySmsCode}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="mobile" enabled="true">
              <stringProp name="TestPlan.comments">111号段500用户</stringProp>
              <stringProp name="filename">/mobile-order.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">mobile</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="busCode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">busCode</stringProp>
              <stringProp name="RegexExtractor.regex">busCode&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则提取token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token&quot;.&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="设置token为全局变量" enabled="true">
            <stringProp name="BeanShellSampler.query">${__setProperty(token,${token},)}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="下单用户登录成功后执行以下操作" enabled="true">
            <stringProp name="IfController.condition">${__jexl3(&quot;${busCode}&quot;==&quot;1&quot;,)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单页预约时间列表-orderShopPreSaleTimeList" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;takeFoodMode&quot;: 1&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${orderShopPreSaleTimeList}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单页获取地址列表-addressListForOrder" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;checkedAddressId&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${addressListForOrder}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单页获取优惠券列表-getConfirmOrderCouponList" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;queryType&quot;: 1,&#xd;
	&quot;pageNo&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;diningCode&quot;: 1,&#xd;
	&quot;products&quot;: [{&#xd;
		&quot;cagetoryCode&quot;: &quot;CAT000039&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP0596&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP0596-00001&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;0.80&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;0.4&quot;,&#xd;
		&quot;purchaseNums&quot;: 2&#xd;
	}, {&#xd;
		&quot;cagetoryCode&quot;: &quot;CAT000070&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP1052&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1052-00000&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;0.77&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;0.14&quot;,&#xd;
		&quot;purchaseNums&quot;: 2&#xd;
	}, {&#xd;
		&quot;cagetoryCode&quot;: &quot;CAT000071&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP1049&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1049-00000&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;0.66&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;0.12&quot;,&#xd;
		&quot;purchaseNums&quot;: 3&#xd;
	}],&#xd;
	&quot;deliverFee&quot;: null,&#xd;
	&quot;bestCouponNo&quot;: &quot;10403938191212551&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${getConfirmOrderCouponList}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单页获取优惠券数量-getConfirmOrderCouponCount" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;diningCode&quot;: 1,&#xd;
	&quot;products&quot;: [{&#xd;
		&quot;cagetoryCode&quot;: &quot;CAT000003&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP1023&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1023-00001&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;0.01&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;10&quot;,&#xd;
		&quot;purchaseNums&quot;: 1&#xd;
	}, {&#xd;
		&quot;cagetoryCode&quot;: &quot;CAT000007&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP1022&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1022-00001&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;0.02&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;10&quot;,&#xd;
		&quot;purchaseNums&quot;: 1&#xd;
	}, {&#xd;
		&quot;cagetoryCode&quot;: &quot;000000&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP1003&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1003-00000&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;1.00&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;10&quot;,&#xd;
		&quot;purchaseNums&quot;: 1&#xd;
	}, {&#xd;
		&quot;cagetoryCode&quot;: &quot;CAT000024&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP1007&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1007-00000&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;1.00&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;10&quot;,&#xd;
		&quot;purchaseNums&quot;: 1&#xd;
	}],&#xd;
	&quot;deliverFee&quot;: null&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${getConfirmOrderCouponCount}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单页获取支付列表-orderPayTypeList" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${orderPayTypeList}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="false">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">api-version</stringProp>
                    <stringProp name="Header.value">v1</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单页获取备注列表-orderGetRemarkList" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${orderGetRemarkList}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单-confirmOrder" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;tookFoodMode&quot;: 1,&#xd;
	&quot;confirmGoodsItemParams&quot;: [{&#xd;
		&quot;itemNo&quot;: &quot;SP1107&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1394&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1463&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1323&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1205&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1009&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1019&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1293&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}],&#xd;
	&quot;expectedDeliveryTime&quot;: &quot;${__time(yyyy-MM-dd HH:mm:ss,)}&quot;,&#xd;
	&quot;fromDateTime&quot;: null,&#xd;
	&quot;toDateTime&quot;: null,&#xd;
	&quot;origin&quot;: 2,&#xd;
	&quot;chooseNotUseCoupon&quot;: true,&#xd;
	&quot;couponNoList&quot;: [],&#xd;
	&quot;useBounty&quot;: true,&#xd;
	&quot;deliverTakeStr&quot;: &quot;立即提货&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${confirmOrder}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交订单-submitOrder" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;deviceId&quot;: &quot;BtMCqiBxWsDshxSJDL4M8uzM9t5Y8BhzxZQd9t/pRdFxHDLgPPewxkNfajsIS88hCWcxeqN4coI7r7Pz2CUH3EA==&quot;,&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;tookFoodMode&quot;: 1,&#xd;
	&quot;submitItemParamList&quot;: [{&#xd;
		&quot;spuCode&quot;: &quot;SP1107&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1107-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;spuCode&quot;: &quot;SP1394&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1394-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;spuCode&quot;: &quot;SP1463&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1463-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;spuCode&quot;: &quot;SP1323&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1323-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;spuCode&quot;: &quot;SP1205&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1205-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;spuCode&quot;: &quot;SP1009&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1009-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;spuCode&quot;: &quot;SP1019&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1019-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;spuCode&quot;: &quot;SP1293&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1293-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}],&#xd;
	&quot;orderPayableMoney&quot;: &quot;0.39&quot;,&#xd;
	&quot;discountMoney&quot;: &quot;174.61&quot;,&#xd;
	&quot;totalDeliveryMoney&quot;: null,&#xd;
	&quot;payFrom&quot;: null,&#xd;
	&quot;origin&quot;: 2,&#xd;
	&quot;type&quot;: 1,&#xd;
	&quot;couponNoList&quot;: null,&#xd;
	&quot;remark&quot;: &quot;&quot;,&#xd;
	&quot;mapType&quot;: 1,&#xd;
	&quot;addressId&quot;: null,&#xd;
	&quot;startDeliveryMoney&quot;: null,&#xd;
	&quot;bountyDiscountMoney&quot;: &quot;113.0&quot;,&#xd;
	&quot;bountyDeductionNum&quot;: &quot;113&quot;,&#xd;
	&quot;freeThresholdMoney&quot;: null,&#xd;
	&quot;bountyRatio&quot;: 1,&#xd;
	&quot;cityMdCode&quot;: 540400,&#xd;
	&quot;fromDateTime&quot;: &quot;${__time(yyyy-MM-dd HH:mm:ss,)}&quot;,&#xd;
	&quot;toDateTime&quot;: null,&#xd;
	&quot;longitude&quot;: null,&#xd;
	&quot;latitude&quot;: null,&#xd;
	&quot;totalProductMoney&quot;: &quot;175.0&quot;,&#xd;
	&quot;totalPayAmount4Product&quot;: &quot;0.39&quot;,&#xd;
	&quot;totalAmount4ProductDiscount&quot;: &quot;113.39&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${submitOrder}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="orderNo" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">orderNo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.orderNo</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="orderId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">orderId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.orderId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="busCode" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">busCode</stringProp>
                <stringProp name="RegexExtractor.regex">busCode&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="订单创建成功后继续以下操作" enabled="true">
              <stringProp name="IfController.condition">${__jexl3(&quot;${orderId}&quot;&gt;&quot;1&quot;,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="微信支付mock-wxpayMock" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;orderNo&quot;: &quot;${orderNo}&quot;,&#xd;
	&quot;orderId&quot;: ${orderId}&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${wxpayMock}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取订单详情-getOrderDetail" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;orderId&quot;: &quot;${orderId}&quot;,&#xd;
	&quot;memberId&quot;: null,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;status&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${getOrderDetail}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取取消订单原因-getCancelReasonList" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;orderCancelType&quot;: 1,&#xd;
	&quot;adapterOrderOrigin&quot;: 1&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${getCancelReasonList}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消订单-cancelOrder" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;orderId&quot;: ${orderId},&#xd;
	&quot;orderCancelType&quot;: 1,&#xd;
	&quot;orderCancelReasonId&quot;: 4,&#xd;
	&quot;otherReasons&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${cancelOrder}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="到家APP-外卖下单" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="验证码登录-loginBySmsCode" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
    &quot;smsCode&quot;: &quot;168168&quot;,&#xd;
    &quot;deviceType&quot;:&quot;2&quot;,&#xd;
    &quot;deviceName&quot;:&quot;&quot;,&#xd;
    &quot;deviceNo&quot;:&quot;&quot;,&#xd;
    &quot;registrationId&quot;:&quot;1104a8979267121b703&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${loginBySmsCode}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="mobile" enabled="true">
              <stringProp name="TestPlan.comments">111号段500用户</stringProp>
              <stringProp name="filename">/mobile-order-waimai.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">mobile</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="busCode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">busCode</stringProp>
              <stringProp name="RegexExtractor.regex">busCode&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则提取token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token&quot;.&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="设置token为全局变量" enabled="true">
            <stringProp name="BeanShellSampler.query">${__setProperty(token,${token},)}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="下单用户登录成功后执行以下操作" enabled="true">
            <stringProp name="IfController.condition">${__jexl3(&quot;${busCode}&quot;==&quot;1&quot;,)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单页预约时间列表-orderShopPreSaleTimeList" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;takeFoodMode&quot;: 1&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${orderShopPreSaleTimeList}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单页获取地址列表-addressListForOrder" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;checkedAddressId&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${addressListForOrder}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="addressId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">addressId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.*?),&quot;memberId&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单页获取优惠券列表-getConfirmOrderCouponList" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;queryType&quot;: 2,&#xd;
	&quot;pageNo&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;diningCode&quot;: 2,&#xd;
	&quot;products&quot;: [{&#xd;
		&quot;cagetoryCode&quot;: &quot;CAT000003&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP1023&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1023-00001&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;0.01&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;10&quot;,&#xd;
		&quot;purchaseNums&quot;: 1&#xd;
	}, {&#xd;
		&quot;cagetoryCode&quot;: &quot;CAT000007&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP1022&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1022-00001&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;0.02&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;10&quot;,&#xd;
		&quot;purchaseNums&quot;: 1&#xd;
	}, {&#xd;
		&quot;cagetoryCode&quot;: &quot;000000&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP1003&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1003-00000&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;1.00&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;10&quot;,&#xd;
		&quot;purchaseNums&quot;: 1&#xd;
	}, {&#xd;
		&quot;cagetoryCode&quot;: &quot;CAT000024&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP1007&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1007-00000&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;1.00&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;10&quot;,&#xd;
		&quot;purchaseNums&quot;: 1&#xd;
	}],&#xd;
	&quot;deliverFee&quot;: &quot;8&quot;,&#xd;
	&quot;bestCouponNo&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${getConfirmOrderCouponList}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单页获取优惠券数量-getConfirmOrderCouponCount" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;diningCode&quot;: 2,&#xd;
	&quot;products&quot;: [{&#xd;
		&quot;cagetoryCode&quot;: &quot;CAT000003&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP1023&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1023-00001&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;0.01&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;10&quot;,&#xd;
		&quot;purchaseNums&quot;: 1&#xd;
	}, {&#xd;
		&quot;cagetoryCode&quot;: &quot;CAT000007&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP1022&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1022-00001&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;0.02&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;10&quot;,&#xd;
		&quot;purchaseNums&quot;: 1&#xd;
	}, {&#xd;
		&quot;cagetoryCode&quot;: &quot;000000&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP1003&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1003-00000&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;1.00&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;10&quot;,&#xd;
		&quot;purchaseNums&quot;: 1&#xd;
	}, {&#xd;
		&quot;cagetoryCode&quot;: &quot;CAT000024&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP1007&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1007-00000&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;1.00&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;10&quot;,&#xd;
		&quot;purchaseNums&quot;: 1&#xd;
	}],&#xd;
	&quot;deliverFee&quot;: &quot;8&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${getConfirmOrderCouponCount}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单页获取支付列表-orderPayTypeList" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${orderPayTypeList}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="false">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">api-version</stringProp>
                    <stringProp name="Header.value">v1</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单页获取备注列表-orderGetRemarkList" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${orderGetRemarkList}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单-confirmOrder" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;tookFoodMode&quot;: 2,&#xd;
	&quot;confirmGoodsItemParams&quot;: [{&#xd;
		&quot;itemNo&quot;: &quot;SP1107&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1394&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1463&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1323&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1205&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1009&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1019&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1293&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}],&#xd;
	&quot;expectedDeliveryTime&quot;: &quot;${__time(yyyy-MM-dd HH:mm:ss,)}&quot;,&#xd;
	&quot;fromDateTime&quot;: null,&#xd;
	&quot;toDateTime&quot;: null,&#xd;
	&quot;origin&quot;: 2,&#xd;
	&quot;chooseNotUseCoupon&quot;: true,&#xd;
	&quot;couponNoList&quot;: [],&#xd;
	&quot;useBounty&quot;: true,&#xd;
	&quot;deliverTakeStr&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${confirmOrder}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交订单-submitOrder" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;deviceId&quot;: &quot;BS00IhUxAYg7ipJR1DGNKx2o7uLuUgrah6LnhCdQeT+YHmcRFvz+xFVJWcjCwlChcNrgbxNYkweNAC/CHK2JHdA==&quot;,&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;tookFoodMode&quot;: 2,&#xd;
	&quot;submitItemParamList&quot;: [{&#xd;
		&quot;spuCode&quot;: &quot;SP1107&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1107-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;spuCode&quot;: &quot;SP1394&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1394-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;spuCode&quot;: &quot;SP1463&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1463-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;spuCode&quot;: &quot;SP1323&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1323-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;spuCode&quot;: &quot;SP1205&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1205-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;spuCode&quot;: &quot;SP1009&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1009-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;spuCode&quot;: &quot;SP1019&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1019-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;spuCode&quot;: &quot;SP1293&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1293-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}],&#xd;
	&quot;orderPayableMoney&quot;: &quot;8.39&quot;,&#xd;
	&quot;discountMoney&quot;: &quot;174.61&quot;,&#xd;
	&quot;totalDeliveryMoney&quot;: &quot;8&quot;,&#xd;
	&quot;payFrom&quot;: null,&#xd;
	&quot;origin&quot;: 2,&#xd;
	&quot;type&quot;: 1,&#xd;
	&quot;couponNoList&quot;: null,&#xd;
	&quot;remark&quot;: &quot;&quot;,&#xd;
	&quot;mapType&quot;: 1,&#xd;
	&quot;addressId&quot;: ${addressId},&#xd;
	&quot;startDeliveryMoney&quot;: &quot;0&quot;,&#xd;
	&quot;bountyDiscountMoney&quot;: &quot;113.0&quot;,&#xd;
	&quot;bountyDeductionNum&quot;: &quot;113&quot;,&#xd;
	&quot;freeThresholdMoney&quot;: &quot;49&quot;,&#xd;
	&quot;bountyRatio&quot;: 1,&#xd;
	&quot;cityMdCode&quot;: 540400,&#xd;
	&quot;fromDateTime&quot;: &quot;${__time(yyyy-MM-dd HH:mm:ss)}&quot;,&#xd;
	&quot;toDateTime&quot;: null,&#xd;
	&quot;longitude&quot;: &quot;95.337347&quot;,&#xd;
	&quot;latitude&quot;: &quot;29.332672&quot;,&#xd;
	&quot;totalProductMoney&quot;: &quot;175.0&quot;,&#xd;
	&quot;totalPayAmount4Product&quot;: &quot;0.39&quot;,&#xd;
	&quot;totalAmount4ProductDiscount&quot;: &quot;113.39&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${submitOrder}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="orderNo" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">orderNo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.orderNo</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="orderId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">orderId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.orderId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="busCode" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">busCode</stringProp>
                <stringProp name="RegexExtractor.regex">busCode&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="订单创建成功后继续以下操作" enabled="true">
              <stringProp name="IfController.condition">${__jexl3(&quot;${orderId}&quot;&gt;&quot;1&quot;,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="微信支付mock-wxpayMock" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;orderNo&quot;: &quot;${orderNo}&quot;,&#xd;
	&quot;orderId&quot;: ${orderId}&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${wxpayMock}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取订单详情-getOrderDetail" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;orderId&quot;: &quot;${orderId}&quot;,&#xd;
	&quot;memberId&quot;: null,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;status&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${getOrderDetail}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取取消订单原因-getCancelReasonList" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;orderCancelType&quot;: 1,&#xd;
	&quot;adapterOrderOrigin&quot;: 1&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${getCancelReasonList}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消订单-cancelOrder" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;orderId&quot;: ${orderId},&#xd;
	&quot;orderCancelType&quot;: 1,&#xd;
	&quot;orderCancelReasonId&quot;: 4,&#xd;
	&quot;otherReasons&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${cancelOrder}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="到家APP-快递下单" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="验证码登录-loginBySmsCode" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
    &quot;smsCode&quot;: &quot;168168&quot;,&#xd;
    &quot;deviceType&quot;:&quot;2&quot;,&#xd;
    &quot;deviceName&quot;:&quot;&quot;,&#xd;
    &quot;deviceNo&quot;:&quot;&quot;,&#xd;
    &quot;registrationId&quot;:&quot;1104a8979267121b703&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${loginBySmsCode}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="mobile" enabled="true">
              <stringProp name="TestPlan.comments">111号段500用户</stringProp>
              <stringProp name="filename">/mobile-express.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">mobile</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="busCode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">busCode</stringProp>
              <stringProp name="RegexExtractor.regex">busCode&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则提取token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token&quot;.&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="设置token为全局变量" enabled="true">
            <stringProp name="BeanShellSampler.query">${__setProperty(token,${token},)}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="下单用户登录成功后执行以下操作" enabled="true">
            <stringProp name="IfController.condition">${__jexl3(&quot;${busCode}&quot;==&quot;1&quot;,)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单页预约时间列表-orderShopPreSaleTimeList" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;takeFoodMode&quot;: 1&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${orderShopPreSaleTimeList}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单页获取地址列表-addressListForOrder" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;checkedAddressId&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${addressListForOrder}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="addressId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">addressId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.*?),&quot;memberId&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单页获取优惠券列表-getConfirmOrderCouponList" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;queryType&quot;: 1,&#xd;
	&quot;pageNo&quot;: 1,&#xd;
	&quot;pageSize&quot;: 10,&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;diningCode&quot;: 1,&#xd;
	&quot;products&quot;: [{&#xd;
		&quot;cagetoryCode&quot;: &quot;CAT000039&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP0596&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP0596-00001&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;0.80&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;0.4&quot;,&#xd;
		&quot;purchaseNums&quot;: 2&#xd;
	}, {&#xd;
		&quot;cagetoryCode&quot;: &quot;CAT000070&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP1052&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1052-00000&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;0.77&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;0.14&quot;,&#xd;
		&quot;purchaseNums&quot;: 2&#xd;
	}, {&#xd;
		&quot;cagetoryCode&quot;: &quot;CAT000071&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP1049&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1049-00000&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;0.66&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;0.12&quot;,&#xd;
		&quot;purchaseNums&quot;: 3&#xd;
	}],&#xd;
	&quot;deliverFee&quot;: null,&#xd;
	&quot;bestCouponNo&quot;: &quot;10403938191212551&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${getConfirmOrderCouponList}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单页获取优惠券数量-getConfirmOrderCouponCount" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;diningCode&quot;: 1,&#xd;
	&quot;products&quot;: [{&#xd;
		&quot;cagetoryCode&quot;: &quot;CAT000039&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP0596&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP0596-00001&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;0.80&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;0.4&quot;,&#xd;
		&quot;purchaseNums&quot;: 2&#xd;
	}, {&#xd;
		&quot;cagetoryCode&quot;: &quot;CAT000070&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP1052&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1052-00000&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;0.77&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;0.14&quot;,&#xd;
		&quot;purchaseNums&quot;: 2&#xd;
	}, {&#xd;
		&quot;cagetoryCode&quot;: &quot;CAT000071&quot;,&#xd;
		&quot;spuCode&quot;: &quot;SP1049&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1049-00000&quot;,&#xd;
		&quot;baseUnitPrice&quot;: &quot;0.66&quot;,&#xd;
		&quot;saleUnitPrice&quot;: &quot;0.12&quot;,&#xd;
		&quot;purchaseNums&quot;: 3&#xd;
	}],&#xd;
	&quot;deliverFee&quot;: null&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${getConfirmOrderCouponCount}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单页获取支付列表-orderPayTypeList" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${orderPayTypeList}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="false">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">api-version</stringProp>
                    <stringProp name="Header.value">v1</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单页获取备注列表-orderGetRemarkList" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${orderGetRemarkList}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认订单-confirmOrder" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;tookFoodMode&quot;: 3,&#xd;
	&quot;confirmGoodsItemParams&quot;: [{&#xd;
		&quot;itemNo&quot;: &quot;SP1107&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	},{&#xd;
		&quot;itemNo&quot;: &quot;SP1394&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1463&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;itemNo&quot;: &quot;SP1293&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}],&#xd;
	&quot;expectedDeliveryTime&quot;: null,&#xd;
	&quot;fromDateTime&quot;: null,&#xd;
	&quot;toDateTime&quot;: null,&#xd;
	&quot;origin&quot;: 1,&#xd;
	&quot;chooseNotUseCoupon&quot;: false,&#xd;
	&quot;couponNoList&quot;: [],&#xd;
	&quot;useBounty&quot;: null,&#xd;
	&quot;deliverTakeStr&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${confirmOrder}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交订单-submitOrder" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;deviceId&quot;: &quot;BS00IhUxAYg7ipJR1DGNKx2o7uLuUgrah6LnhCdQeT+YHmcRFvz+xFVJWcjCwlChcNrgbxNYkweNAC/CHK2JHdA==&quot;,&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;tookFoodMode&quot;: 3,&#xd;
	&quot;submitItemParamList&quot;: [{&#xd;
		&quot;spuCode&quot;: &quot;SP1107&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1107-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;spuCode&quot;: &quot;SP1394&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1394-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;spuCode&quot;: &quot;SP1463&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1463-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	},{&#xd;
		&quot;spuCode&quot;: &quot;SP1293&quot;,&#xd;
		&quot;skuCode&quot;: &quot;SP1293-00000&quot;,&#xd;
		&quot;buyNum&quot;: 1&#xd;
	}],&#xd;
	&quot;orderPayableMoney&quot;: &quot;15.79&quot;,&#xd;
	&quot;discountMoney&quot;: &quot;76.21&quot;,&#xd;
	&quot;totalDeliveryMoney&quot;: &quot;15&quot;,&#xd;
	&quot;payFrom&quot;: null,&#xd;
	&quot;origin&quot;: 2,&#xd;
	&quot;type&quot;: 1,&#xd;
	&quot;couponNoList&quot;: null,&#xd;
	&quot;remark&quot;: &quot;&quot;,&#xd;
	&quot;mapType&quot;: 1,&#xd;
	&quot;addressId&quot;: ${addressId},&#xd;
	&quot;startDeliveryMoney&quot;: &quot;0&quot;,&#xd;
	&quot;bountyDiscountMoney&quot;: &quot;44.0&quot;,&#xd;
	&quot;bountyDeductionNum&quot;: &quot;44&quot;,&#xd;
	&quot;freeThresholdMoney&quot;: &quot;99&quot;,&#xd;
	&quot;bountyRatio&quot;: 1,&#xd;
	&quot;cityMdCode&quot;: 540400,&#xd;
	&quot;fromDateTime&quot;: &quot;${__time(yyyy-MM-dd HH:mm:ss)}&quot;,&#xd;
	&quot;toDateTime&quot;: null,&#xd;
	&quot;longitude&quot;: &quot;95.337347&quot;,&#xd;
	&quot;latitude&quot;: &quot;29.332672&quot;,&#xd;
	&quot;totalProductMoney&quot;: &quot;77.0&quot;,&#xd;
	&quot;totalPayAmount4Product&quot;: &quot;0.79&quot;,&#xd;
	&quot;totalAmount4ProductDiscount&quot;: &quot;44.79&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${submitOrder}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="orderNo" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">orderNo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.orderNo</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="orderId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">orderId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.orderId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="busCode" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">busCode</stringProp>
                <stringProp name="RegexExtractor.regex">busCode&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="订单创建成功后继续以下操作" enabled="true">
              <stringProp name="IfController.condition">${__jexl3(&quot;${orderId}&quot;&gt;&quot;1&quot;,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="微信支付mock-wxpayMock" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;orderNo&quot;: &quot;${orderNo}&quot;,&#xd;
	&quot;orderId&quot;: ${orderId}&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${wxpayMock}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取订单详情-getOrderDetail" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;orderId&quot;: &quot;${orderId}&quot;,&#xd;
	&quot;memberId&quot;: null,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;status&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${getOrderDetail}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取取消订单原因-getCancelReasonList" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;orderCancelType&quot;: 1,&#xd;
	&quot;adapterOrderOrigin&quot;: 1&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${getCancelReasonList}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消订单-cancelOrder" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;orderId&quot;: ${orderId},&#xd;
	&quot;orderCancelType&quot;: 1,&#xd;
	&quot;orderCancelReasonId&quot;: 4,&#xd;
	&quot;otherReasons&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">${cancelOrder}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="到家APP-我的" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="验证码登录-loginBySmsCode" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
    &quot;smsCode&quot;: &quot;168168&quot;,&#xd;
    &quot;deviceType&quot;:&quot;2&quot;,&#xd;
    &quot;deviceName&quot;:&quot;&quot;,&#xd;
    &quot;deviceNo&quot;:&quot;&quot;,&#xd;
    &quot;registrationId&quot;:&quot;1104a8979267121b703&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${loginBySmsCode}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="mobile" enabled="true">
              <stringProp name="TestPlan.comments">111号段500用户</stringProp>
              <stringProp name="filename">/mobile-my.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">mobile</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则提取token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token&quot;.&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="设置token为全局变量" enabled="true">
            <stringProp name="BeanShellSampler.query">${__setProperty(token,${token},)}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询个人信息-getPersonalInfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${getPersonalInfo}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="配置中心-getConfig" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${getConfig}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询可用优惠券数量-vocherAvailableCount" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${vocherAvailableCount}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="积分详情-pointsDetail" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${pointsDetail}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询各状态订单数-orderStatusAmount" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${orderStatusAmount}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取订单列表-orderGetOrderList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;status&quot;: &quot;${status}&quot;,&#xd;
	&quot;pageNo&quot;: 1,&#xd;
	&quot;pageSize&quot;: 20&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${orderGetOrderList}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="status" enabled="true">
              <stringProp name="TestPlan.comments">订单状态</stringProp>
              <stringProp name="filename">/status.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">status</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取广告位-positionList-个人中心-底部广告位" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Ad-sjgf-mine-bottom-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${positionList}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="ROS-查询类接口" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取验证码-rosSendVerificationCode" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;mobile&quot;: &quot;18622790003&quot;,&#xd;
	&quot;channel&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${rosSendVerificationCode}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey_ros&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">api-version</stringProp>
                  <stringProp name="Header.value">v1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">appKey</stringProp>
                  <stringProp name="Header.value">${appkey_ros}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">${version}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${timestamp}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sign</stringProp>
                  <stringProp name="Header.value">${sign}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">token</stringProp>
                  <stringProp name="Header.value">${__property(token)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="短信登录-rosSmsLogin" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;mobile&quot;: &quot;19900000996&quot;,&#xd;
	&quot;verificationCode&quot;: &quot;999999&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${rosSmsLogin}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey_ros&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">api-version</stringProp>
                  <stringProp name="Header.value">v1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">appKey</stringProp>
                  <stringProp name="Header.value">${appkey_ros}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">${version}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${timestamp}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sign</stringProp>
                  <stringProp name="Header.value">${sign}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">token</stringProp>
                  <stringProp name="Header.value">${__property(token)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则提取token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="设置token为全局变量" enabled="true">
            <stringProp name="BeanShellSampler.query">${__setProperty(token,${token},)}</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取小票列表-rosGetBillList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;shopId&quot;: &quot;${shopMdCode}&quot;,&#xd;
	&quot;deviceCode&quot;: &quot;5268e609b23c&quot;,&#xd;
	&quot;billTypes&quot;: [{&#xd;
		&quot;type&quot;: 1,&#xd;
		&quot;startTime&quot;: 1650258047814&#xd;
	}, {&#xd;
		&quot;type&quot;: 2,&#xd;
		&quot;startTime&quot;: 1650258047814&#xd;
	}, {&#xd;
		&quot;type&quot;: 3,&#xd;
		&quot;startTime&quot;: 1650258047814&#xd;
	}]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${rosGetBillList}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">api-version</stringProp>
                  <stringProp name="Header.value">v1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">appKey</stringProp>
                  <stringProp name="Header.value">${appkey_ros}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">${version}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${timestamp}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sign</stringProp>
                  <stringProp name="Header.value">${sign}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">token</stringProp>
                  <stringProp name="Header.value">${__property(token)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey_ros&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取订单数量信息-rosCountByTakeType" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${rosCountByTakeType}/${shopMdCode}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">api-version</stringProp>
                  <stringProp name="Header.value">v1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">appKey</stringProp>
                  <stringProp name="Header.value">${appkey_ros}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">${version}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${timestamp}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sign</stringProp>
                  <stringProp name="Header.value">${sign}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">token</stringProp>
                  <stringProp name="Header.value">${__property(token)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey_ros&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过类目查询产品列表-rosQueryProductList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;categoryId&quot;: &quot;&quot;,&#xd;
	&quot;keyword&quot;: &quot;&quot;,&#xd;
	&quot;orderId&quot;: &quot;&quot;,&#xd;
	&quot;pageNum&quot;: 1,&#xd;
	&quot;pageSize&quot;: 32,&#xd;
	&quot;shopMdCode&quot;: &quot;${shopMdCode}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${rosQueryProductList}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">api-version</stringProp>
                  <stringProp name="Header.value">v1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">appKey</stringProp>
                  <stringProp name="Header.value">${appkey_ros}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">${version}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${timestamp}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sign</stringProp>
                  <stringProp name="Header.value">${sign}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">token</stringProp>
                  <stringProp name="Header.value">${__property(token)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey_ros&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据取餐类型获取各状态订单数-rosCountByStatus" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;shopId&quot;: &quot;${shopMdCode}&quot;,&#xd;
	&quot;takeType&quot;: 1,&#xd;
	&quot;startTime&quot;: ${__timeShift(,,-P6H,,)},&#xd;
	&quot;endTime&quot;: ${__timeShift(,,P6H,,)}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${rosCountByStatus}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">api-version</stringProp>
                  <stringProp name="Header.value">v1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">appKey</stringProp>
                  <stringProp name="Header.value">${appkey_ros}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">${version}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${timestamp}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sign</stringProp>
                  <stringProp name="Header.value">${sign}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">token</stringProp>
                  <stringProp name="Header.value">${__property(token)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey_ros&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询门店产品列表-rosQueryShopProductList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;shopMdCode&quot;: &quot;${shopMdCode}&quot;,&#xd;
	&quot;keyword&quot;: &quot;&quot;,&#xd;
	&quot;rootMenuCode&quot;: &quot;&quot;,&#xd;
	&quot;subMenuCodes&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${rosQueryShopProductList}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">api-version</stringProp>
                  <stringProp name="Header.value">v1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">appKey</stringProp>
                  <stringProp name="Header.value">${appkey_ros}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">${version}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${timestamp}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sign</stringProp>
                  <stringProp name="Header.value">${sign}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">token</stringProp>
                  <stringProp name="Header.value">${__property(token)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey_ros&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取订单列表-rosOrderList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;endTime&quot;: ${__time(,)},&#xd;
	&quot;frontParam&quot;: 5,&#xd;
	&quot;pageNo&quot;: 1,&#xd;
	&quot;pageSize&quot;: 40,&#xd;
	&quot;shopMdCode&quot;: ${shopMdCode},&#xd;
	&quot;startTime&quot;: ${__longSum(${__time},-180000000,)},&#xd;
	&quot;takeType&quot;: ${__Random(1,3,)}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${rosOrderList}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">api-version</stringProp>
                  <stringProp name="Header.value">v1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">appKey</stringProp>
                  <stringProp name="Header.value">${appkey_ros}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">${version}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${timestamp}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sign</stringProp>
                  <stringProp name="Header.value">${sign}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">token</stringProp>
                  <stringProp name="Header.value">${__property(token)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey_ros&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="orderId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">orderId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.orderId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="查出订单后继续以下操作" enabled="true">
            <stringProp name="IfController.condition">${__jexl3(&quot;${orderId}&quot;&gt;&quot;1&quot;,)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单商品详情-rosOrderDetail" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${rosOrderDetail}/${orderId}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">api-version</stringProp>
                    <stringProp name="Header.value">v1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">appKey</stringProp>
                    <stringProp name="Header.value">${appkey_ros}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">version</stringProp>
                    <stringProp name="Header.value">${version}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${sign}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">token</stringProp>
                    <stringProp name="Header.value">${__property(token)}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey_ros&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询订单支付状态-rosGetStatus" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;orderId&quot;: &quot;${orderId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${gateway}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${rosGetStatus}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">api-version</stringProp>
                    <stringProp name="Header.value">v1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">appKey</stringProp>
                    <stringProp name="Header.value">${appkey_ros}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">version</stringProp>
                    <stringProp name="Header.value">${version}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${timestamp}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">sign</stringProp>
                    <stringProp name="Header.value">${sign}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">token</stringProp>
                    <stringProp name="Header.value">${__property(token)}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="验签鉴权" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.test.testMd5;

//获取path
String path = sampler.getPath();
log.info(&quot;===path===:&quot;+path);

vars.put(&quot;timestamp&quot;,&quot;${__time(,)}&quot;);
sign_con = vars.get(&quot;path&quot;)+path+vars.get(&quot;timestamp1&quot;)+vars.get(&quot;timestamp&quot;)+vars.get(&quot;version1&quot;)+vars.get(&quot;version&quot;)+vars.get(&quot;signKey_ros&quot;);
log.info(&quot;=========================================================&quot;);
log.info(sign_con);

testMd5 tMd5 = new testMd5();
String result = tMd5.md5Capital(sign_con);
log.info(result);
vars.put(&quot;sign&quot;,result);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2135767392">&quot;busMessage&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="后端监听器" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="influxdbMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="influxdbUrl" elementType="Argument">
              <stringProp name="Argument.name">influxdbUrl</stringProp>
              <stringProp name="Argument.value">http://10.88.152.15:31501/write?db=jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="application" elementType="Argument">
              <stringProp name="Argument.name">application</stringProp>
              <stringProp name="Argument.value">到家APP-prod</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="measurement" elementType="Argument">
              <stringProp name="Argument.name">measurement</stringProp>
              <stringProp name="Argument.value">jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">true</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex</stringProp>
              <stringProp name="Argument.value">.*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">90;95;99</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testTitle" elementType="Argument">
              <stringProp name="Argument.name">testTitle</stringProp>
              <stringProp name="Argument.value">压测场景九_混合场景</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventTags" elementType="Argument">
              <stringProp name="Argument.name">eventTags</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
